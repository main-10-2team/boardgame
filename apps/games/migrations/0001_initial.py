# Generated by Django 5.2.1 on 2025-07-25 03:15

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Game",
            fields=[
                ("game_id", models.AutoField(primary_key=True, serialize=False)),
                ("age", models.IntegerField(blank=True, null=True)),
                ("title", models.CharField(max_length=255, unique=True)),
                ("like_count", models.IntegerField(default=0)),
                ("reviews_count", models.IntegerField(default=0)),
                ("description", models.TextField(blank=True, null=True)),
                ("min_players", models.IntegerField()),
                ("max_players", models.IntegerField()),
                ("playtime_min_minutes", models.IntegerField()),
                ("playtime_max_minutes", models.IntegerField()),
                (
                    "difficulty",
                    models.FloatField(
                        help_text="0-5 stars for difficulty (0=easiest, 5=hardest, two decimal places)",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                ("image_url", models.CharField(blank=True, max_length=255, null=True)),
                ("rules_url", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "average_rating",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "게임",
                "verbose_name_plural": "게임 목록",
                "db_table": "game",
            },
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                ("genre_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "자르",
                "verbose_name_plural": "자르 목록",
                "db_table": "genre",
            },
        ),
        migrations.CreateModel(
            name="PlaytimeCategory",
            fields=[
                ("playtime_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("min_minutes", models.IntegerField()),
                ("max_minutes", models.IntegerField()),
            ],
            options={
                "verbose_name": "게임 시간 카테고리",
                "verbose_name_plural": "게임 시간 카테고리 목록",
                "db_table": "playtime_category",
            },
        ),
        migrations.CreateModel(
            name="GameViewLog",
            fields=[
                ("view_id", models.AutoField(primary_key=True, serialize=False)),
                ("viewed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "game",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="games.game"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "verbose_name": "게임 조회 로그",
                "verbose_name_plural": "게임 조회 로그 목록",
                "db_table": "game_view_log",
            },
        ),
        migrations.CreateModel(
            name="GameGenre",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("game", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="games.game")),
                ("genre", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="games.genre")),
            ],
            options={
                "verbose_name": "게임장르",
                "verbose_name_plural": "게임장르",
                "db_table": "game_genre",
                "unique_together": {("game", "genre")},
            },
        ),
        migrations.CreateModel(
            name="Like",
            fields=[
                ("like_id", models.AutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("game", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="games.game")),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                "verbose_name": "좋아요",
                "verbose_name_plural": "좋아요 목록",
                "db_table": "like",
                "unique_together": {("user", "game")},
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                ("review_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "rating",
                    models.FloatField(
                        help_text="0-5 in 0.5 increments (e.g., 0, 0.5, 1, ..., 5)",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                ("content", models.CharField(blank=True, help_text="Max 500 chars", max_length=500, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("game", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="games.game")),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                "verbose_name": "리뷰",
                "verbose_name_plural": "리뷰 목록",
                "db_table": "review",
                "unique_together": {("user", "game")},
            },
        ),
    ]
